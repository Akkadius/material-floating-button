/**
 * CONTENTS
 *
 * #Introduction........Naming conventions used throughout the code.
 *
 * #SETTINGS
 * Variables............Globally-available variables and config.
 *
 * #TOOLS
 * Mixins...............Useful mixins.
 *
 * #GENERIC
 * Demo styles..........Styles for demo only (consider removing these).
 *
 * #BASE
 * Raw styles.............the very basic component wrapper.
 * Modifiers..............the basic styles dependant on component placement.
 * Debuggers..............the basic styles dependant on component placement.
 *
 * #BUTTONS
 * Base..................Wrapping and constraining every button.
 * Modifiers.............Styles that depends on state and settings.
 * Debuggers.............Styles for development.
 *
 * #LABELS
 * Base..................Wrapping and constraining every label.
 * Modifiers.............styles that depends on state and settings.
 * Debuggers.............Styles for development.
 *
 * #DEVELOPMENT
 * In development........These styles are in development and not yet finalised
 * Debuggers..........helper styles and flags for development.
 */
/*------------------------------------*\
    #Introduction 
\*------------------------------------*/
/**
 * The code AND the comments use naming conventions to refer to each part of 
 * the UI put in place by this component. If you see that somewhere they are
 * not followed please consider a Pull Request. The naming conventions are:
 *
 * "Component" : the widget itself as a whole. This is the last time it will be
 *               called anything different than "component". So, stay away from 
 *               "widget", "button" or anything else when referring to the 
 *               Component in general.
 * 
 * "Main Button" : the button that is always in view. Hovering or clicking on it
 *                 will reveal the child buttons.
 *
 * "Child buttons" : if you've read the previous point you know what they are.
 *                   Did you read the previous point? :)
 *  
 * "Label(s)" : the tooltip that fades in when hovering over a button.

/*------------------------------------*\
    #SETTINGS | Variables
\*------------------------------------*/
/* COLORS ----------------------------*/
/* SPEEDS ----------------------------*/
/* SIZES -----------------------------*/
/* OTHER VARIABLES -------------------*/
/*------------------------------------*\
    #GENERIC | demo styles
\*------------------------------------*/
html, body {
  height: 100%;
  min-height: 100%;
  font-family: arial; }

.cf:before,
.cf:after {
  content: " ";
  /* 1 */
  display: table;
  /* 2 */ }

.cf:after {
  clear: both; }

/*------------------------------------*\
    #BASE | Raw styles
\*------------------------------------*/
/**
 * The very core styling of the button.
 * These styles are shared by every instance of the button.
 * Styles palced here should NOT care about placement in the screen,
 * options chosen by the user or state of the button.
 */
.mfo-component, .mfo-component--tl, .mfo-component--tr, .mfo-component--bl, .mfo-component--br {
  box-sizing: border-box;
  bottom: 0;
  margin: 25px;
  position: fixed;
  white-space: nowrap;
  z-index: 30;
  will-change: top,left; }

.mfo-component *, .mfo-component--tl *, .mfo-component--tr *, .mfo-component--bl *, .mfo-component--br *, .mfo-component *:before, .mfo-component--tl *:before, .mfo-component--tr *:before, .mfo-component--bl *:before, .mfo-component--br *:before, .mfo-component *:after, .mfo-component--tl *:after, .mfo-component--tr *:after, .mfo-component--bl *:after, .mfo-component--br *:after {
  box-sizing: inherit; }

/*------------------------------------*\
    #BASE | Modifiers
\*------------------------------------*/
/**
 * These styles depends on the placement of the button.
 * Styles can be:
 * 1. Top-left:  modified by the " --tl " suffix.
 * 2. Top-right: modified by the " --tr " suffix.
 * 3. Bottom-left:  modified by the " --bl " suffix.
 * 4. Bottom-right: modified by the " --br " suffix.
 */
.mfo-component--tl {
  left: 0;
  top: 0; }

.mfo-component--tr {
  right: 0;
  top: 0; }

.mfo-component--bl {
  left: 0;
  bottom: 0; }

.mfo-component--br {
  right: 0;
  bottom: 0; }

/*------------------------------------*\
    #BUTTONS | Base
\*------------------------------------*/
.mfo-component__button, .mfo-component__button--main, .mfo-component__button--child {
  background-color: #CF432A;
  position: relative;
  border: none;
  border-radius: 50%;
  box-shadow: 0 0 4px rgba(0, 0, 0, 0.14), 0 4px 8px rgba(0, 0, 0, 0.28);
  cursor: pointer;
  outline: none;
  padding: 0;
  pointer-events: auto;
  position: relative;
  -webkit-user-drag: none;
  -webkit-transform: scale(1) rotate(360deg);
  transform: scale(1) rotate(360deg);
  -webkit-transition: -webkit-transform 150ms cubic-bezier(0.4, 0, 1, 1);
  transition: transform 150ms cubic-bezier(0.4, 0, 1, 1);
  font-weight: bold;
  color: #f1f1f1; }

/**
 * This is the unordered list for the list items that contain 
 * the child buttons.
 *
 */
.mfo-component__list {
  list-style: none;
  margin: 0;
  padding: 0; }
  .mfo-component__list > li {
    display: block;
    position: absolute;
    top: 0; }

/*------------------------------------*\
    #BUTTONS | Modifiers
\*------------------------------------*/
.mfo-component__button--main {
  height: 56px;
  width: 56px;
  z-index: 20; }

.mfo-component__button--child {
  height: 56px;
  width: 56px; }

/**
 * This is the basic styles for all the icons inside the main button
 */
.mfo-component__main-icon {
  position: absolute; }

/*------------------------------------*\
    #LABELS | base
\*------------------------------------*/
/**
 * These are the labels associated to each button.
 * They are exposed only when hovering the realted button.
 */
.mfo-component__label {
  background: rgba(0, 0, 0, 0.4);
  padding: 4px 10px;
  border-radius: 3px;
  color: rgba(255, 255, 255, 0.8);
  font-size: 13px;
  pointer-events: none; }

.mfo-component__button + .mfo-component__label, .mfo-component__button--main + .mfo-component__label, .mfo-component__button--child + .mfo-component__label {
  opacity: 0;
  transition: all 0.5s; }

.mfo-component__button:hover + .mfo-component__label, .mfo-component__button--main:hover + .mfo-component__label, .mfo-component__button--child:hover + .mfo-component__label {
  opacity: 1;
  transition: all 0.3s; }

/*------------------------------------*\
    #LABELS | Modifiers
\*------------------------------------*/
.mfo-component--br .mfo-component__label {
  position: absolute;
  right: 70px;
  top: 17.5px; }

/*------------------------------------*\
    #DEVELOPMENT | In development
\*------------------------------------*/
/**
 * This part is where unfinished code should stay.
 * When a feature is ready(sh) move these styles to their proper place.
 */
/**
 * This div is never shown but it's vital for slide-in buttons
 * It takes the height of the whole Component when it is in use
 * and ensures that the menu is easily scrolled without flickering.
 * You can see its usage by toggling the slide-in dev flag 
 * (see #DEVELOPMENT | Debuggers)
 */
.mfo-component__hover-helper {
  position: absolute;
  height: 100%;
  width: 56px;
  background: black;
  transition: all 1s;
  top: 0;
  opacity: 0.1; }

.mfo-component:hover .mfo-component__hover-helper, .mfo-component--tl:hover .mfo-component__hover-helper, .mfo-component--tr:hover .mfo-component__hover-helper, .mfo-component--bl:hover .mfo-component__hover-helper, .mfo-component--br:hover .mfo-component__hover-helper {
  top: -280px;
  height: 280px;
  width: 100%; }

/*------------------------------------*\
    #DEVELOPMENT | Debuggers
\*------------------------------------*/
/**
 * These are mainly helpers for development. They do not have to end up
 * in production but it's handy to keep them when developing.
 */
/**
 * Apply this class to the html tag when developing the slide-in button
 */
html.slide-in {
  border-top: 5px solid teal; }

* {
  border: 1px solid red; }

.mfo-component .mfo-component__list li, .mfo-component--tl .mfo-component__list li, .mfo-component--tr .mfo-component__list li, .mfo-component--bl .mfo-component__list li, .mfo-component--br .mfo-component__list li {
  opacity: 0;
  transition: all 0.5s; }
.mfo-component:hover .mfo-component__list li, .mfo-component--tl:hover .mfo-component__list li, .mfo-component--tr:hover .mfo-component__list li, .mfo-component--bl:hover .mfo-component__list li, .mfo-component--br:hover .mfo-component__list li {
  opacity: 1; }
.mfo-component:hover .mfo-component__list li:nth-child(1), .mfo-component--tl:hover .mfo-component__list li:nth-child(1), .mfo-component--tr:hover .mfo-component__list li:nth-child(1), .mfo-component--bl:hover .mfo-component__list li:nth-child(1), .mfo-component--br:hover .mfo-component__list li:nth-child(1) {
  -webkit-transform: translateY(-70px); }
.mfo-component:hover .mfo-component__list li:nth-child(2), .mfo-component--tl:hover .mfo-component__list li:nth-child(2), .mfo-component--tr:hover .mfo-component__list li:nth-child(2), .mfo-component--bl:hover .mfo-component__list li:nth-child(2), .mfo-component--br:hover .mfo-component__list li:nth-child(2) {
  -webkit-transform: translateY(-140px); }
.mfo-component:hover .mfo-component__list li:nth-child(3), .mfo-component--tl:hover .mfo-component__list li:nth-child(3), .mfo-component--tr:hover .mfo-component__list li:nth-child(3), .mfo-component--bl:hover .mfo-component__list li:nth-child(3), .mfo-component--br:hover .mfo-component__list li:nth-child(3) {
  -webkit-transform: translateY(-210px); }
.mfo-component:hover .mfo-component__list li:nth-child(4), .mfo-component--tl:hover .mfo-component__list li:nth-child(4), .mfo-component--tr:hover .mfo-component__list li:nth-child(4), .mfo-component--bl:hover .mfo-component__list li:nth-child(4), .mfo-component--br:hover .mfo-component__list li:nth-child(4) {
  -webkit-transform: translateY(-280px); }

/*# sourceMappingURL=style.css.map */
